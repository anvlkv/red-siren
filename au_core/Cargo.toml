[package]
name = "au_core"
authors = { workspace = true }
repository = { workspace = true }
edition = { workspace = true }
version = { workspace = true }
license = { workspace = true }
rust-version = { workspace = true }
keywords = { workspace = true }

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
crux_core = { workspace = true }
crux_macros = { workspace = true }
spectrum-analyzer = "1.5.0"
fundsp = { version = "0.16.0", default-features = false }
hecs = { version = "0.10.3", features = ["serde", "macros"] }
log = { workspace = true }
anyhow = "1.0.79"
logging_timer = "1.1.0"
cfg-if = "1.0.0"
serde = { workspace = true, features = ["derive"] }
futures = "0.3.28"
u-num-it = "0.1.0"
typenum = "1.17.0"
send_wrapper = "0.6.0"
uuid = { version = "1.7.0", features = ["v4"] }
ringbuf = "0.3.3"
shared = { path = "../shared" }
parking_lot = "0.12.1"

[features]
typegen = ["crux_core/typegen", "shared/typegen"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
lazy_static = { workspace = true }
bincode = { version = "1.3.3" }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { version = "0.4.36" }
getrandom = { version = "0.2.9", features = ["js"] }
web-sys = { version = "0.3.63", features = [
    "AudioContext",
    "BaseAudioContext",
    "AudioNode",
    "AudioWorklet",
    "AudioWorkletNode",
    "AudioDestinationNode",
    "MediaDevices",
    "MediaStream",
    "MediaStreamConstraints",
    "MediaStreamAudioSourceNode",
    "MediaStreamAudioSourceOptions",
    "MessagePort",
    "MessageEvent",
    "Navigator",
    "Window",
    "Response",
] }
js-sys = { version = "0.3.63" }
console_error_panic_hook = { version = "0.1.7" }
console_log = { version = "1.0.0" }

[dev-dependencies]
eframe = "0.26.2"
dasp_sample = "0.11.0"
simple_logger = "4.1.0"

[[example]]
name = "node"
path = "examples/single-node.rs"
required-features = ["cpal"]


[[example]]
name = "multiple-nodes"
path = "examples/multiple-nodes.rs"
required-features = ["cpal"]
