[package]
name = "web-leptos"
version = { workspace = true }
edition = { workspace = true }

[lib]
crate-type = ["cdylib", "rlib"]


[dependencies]
anyhow = "1.0.71"
app_core = { path = "../app_core" }
leptos = { version = "0.5.4", features = ["nightly"] }
leptos_meta = { version = "0.5.4", features = ["nightly"] }
leptos_router = { version = "0.5.4", features = ["nightly"] }
leptos_axum = { version = "0.5.4", optional = true }
leptos-use = { git = "https://github.com/Synphonyte/leptos-use.git", default-features = false }
axum = { version = "0.6.18", optional = true }
http = "0.2.9"
tokio = { version = "1.28.1", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4.0", features = ["fs"], optional = true }
wasm-bindgen = "0.2.86"
log = { workspace = true }
simple_logger = "4.1.0"
console_error_panic_hook = "0.1.7"
console_log = "1.0.0"
cfg-if = "1.0.0"
thiserror = "1.0.40"
mint = { version = "0.5.9", features = ["serde"] }
tracing = { version = "0.1.37", optional = true }
web-sys = { version = "0.3.63", features = [
    "UiEvent",
    "Event",
    "EventTarget",
    "Element",
    "HtmlElement",
    "Navigator",
    "Window",
    "MediaQueryList",
    "Permissions",
    "PermissionState",
    "PermissionStatus"
], optional = true }
js-sys = { version = "0.3.63", optional = true }
bincode = { version = "1.3.3", optional = true }
wasm-bindgen-futures = "0.4.36"
futures = "0.3.29"
gloo-storage = { version = "0.3.0", optional = true }
uuid = { version = "1.6.1" }
lazy_static = { workspace = true }


[features]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "app_core/browser",
]
browser = ["web-sys", "js-sys", "bincode", "app_core/browser", "gloo-storage"]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:tracing",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
]


[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "red-siren"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
tailwind-input-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:3000"

# The port to use for automatic reload monitoring
reload-port = 3001


#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate", "browser"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
